/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-zorro-antd/tooltip";
export class NzCronExpressionLabelComponent {
    constructor() {
        this.type = 'second';
        this.valid = true;
        this.labelFocus = null;
        this.labelError = 'secondError';
    }
    ngOnInit() {
        this.labelError = `${this.type}Error`;
    }
}
NzCronExpressionLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: NzCronExpressionLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NzCronExpressionLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.5", type: NzCronExpressionLabelComponent, selector: "nz-cron-expression-label", inputs: { type: "type", valid: "valid", locale: "locale", labelFocus: "labelFocus" }, exportAs: ["nzCronExpressionLabel"], ngImport: i0, template: `
    <div
      class="ant-cron-expression-label"
      [class.ant-cron-expression-label-foucs]="labelFocus === type"
      [class.ant-cron-expression-error]="!valid"
    >
      <label nz-tooltip [nzTooltipTitle]="error" [nzTooltipVisible]="!valid" nzTooltipPlacement="bottom">
        {{ locale[type] }}
      </label>
    </div>
    <ng-template #error>
      <div class="ant-cron-expression-hint" [innerHTML]="locale[labelError]"></div>
    </ng-template>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NzTooltipDirective, selector: "[nz-tooltip]", inputs: ["nzTooltipTitle", "nzTooltipTitleContext", "nz-tooltip", "nzTooltipTrigger", "nzTooltipPlacement", "nzTooltipOrigin", "nzTooltipVisible", "nzTooltipMouseEnterDelay", "nzTooltipMouseLeaveDelay", "nzTooltipOverlayClassName", "nzTooltipOverlayStyle", "nzTooltipArrowPointAtCenter", "nzTooltipColor"], outputs: ["nzTooltipVisibleChange"], exportAs: ["nzTooltip"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: NzCronExpressionLabelComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    selector: 'nz-cron-expression-label',
                    exportAs: 'nzCronExpressionLabel',
                    template: `
    <div
      class="ant-cron-expression-label"
      [class.ant-cron-expression-label-foucs]="labelFocus === type"
      [class.ant-cron-expression-error]="!valid"
    >
      <label nz-tooltip [nzTooltipTitle]="error" [nzTooltipVisible]="!valid" nzTooltipPlacement="bottom">
        {{ locale[type] }}
      </label>
    </div>
    <ng-template #error>
      <div class="ant-cron-expression-hint" [innerHTML]="locale[labelError]"></div>
    </ng-template>
  `
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { type: [{
                type: Input
            }], valid: [{
                type: Input
            }], locale: [{
                type: Input
            }], labelFocus: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Jvbi1leHByZXNzaW9uLWxhYmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvbXBvbmVudHMvY3Jvbi1leHByZXNzaW9uL2Nyb24tZXhwcmVzc2lvbi1sYWJlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSx1QkFBdUIsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7OztBQTBCckcsTUFBTSxPQUFPLDhCQUE4QjtJQU96QztRQU5TLFNBQUksR0FBYSxRQUFRLENBQUM7UUFDMUIsVUFBSyxHQUFZLElBQUksQ0FBQztRQUV0QixlQUFVLEdBQWtCLElBQUksQ0FBQztRQUMxQyxlQUFVLEdBQWtCLGFBQWEsQ0FBQztJQUUzQixDQUFDO0lBRWhCLFFBQVE7UUFDTixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksT0FBTyxDQUFDO0lBQ3hDLENBQUM7OzJIQVhVLDhCQUE4QjsrR0FBOUIsOEJBQThCLDJMQWYvQjs7Ozs7Ozs7Ozs7OztHQWFUOzJGQUVVLDhCQUE4QjtrQkFwQjFDLFNBQVM7bUJBQUM7b0JBQ1QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7R0FhVDtpQkFDRjswRUFFVSxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTnpDcm9uRXhwcmVzc2lvbkxhYmVsSTE4biB9IGZyb20gJ25nLXpvcnJvLWFudGQvaTE4bic7XG5cbmltcG9ydCB7IFRpbWVUeXBlLCBUaW1lVHlwZUVycm9yIH0gZnJvbSAnLi90eXBpbmdzJztcblxuQENvbXBvbmVudCh7XG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBzZWxlY3RvcjogJ256LWNyb24tZXhwcmVzc2lvbi1sYWJlbCcsXG4gIGV4cG9ydEFzOiAnbnpDcm9uRXhwcmVzc2lvbkxhYmVsJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2XG4gICAgICBjbGFzcz1cImFudC1jcm9uLWV4cHJlc3Npb24tbGFiZWxcIlxuICAgICAgW2NsYXNzLmFudC1jcm9uLWV4cHJlc3Npb24tbGFiZWwtZm91Y3NdPVwibGFiZWxGb2N1cyA9PT0gdHlwZVwiXG4gICAgICBbY2xhc3MuYW50LWNyb24tZXhwcmVzc2lvbi1lcnJvcl09XCIhdmFsaWRcIlxuICAgID5cbiAgICAgIDxsYWJlbCBuei10b29sdGlwIFtuelRvb2x0aXBUaXRsZV09XCJlcnJvclwiIFtuelRvb2x0aXBWaXNpYmxlXT1cIiF2YWxpZFwiIG56VG9vbHRpcFBsYWNlbWVudD1cImJvdHRvbVwiPlxuICAgICAgICB7eyBsb2NhbGVbdHlwZV0gfX1cbiAgICAgIDwvbGFiZWw+XG4gICAgPC9kaXY+XG4gICAgPG5nLXRlbXBsYXRlICNlcnJvcj5cbiAgICAgIDxkaXYgY2xhc3M9XCJhbnQtY3Jvbi1leHByZXNzaW9uLWhpbnRcIiBbaW5uZXJIVE1MXT1cImxvY2FsZVtsYWJlbEVycm9yXVwiPjwvZGl2PlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgTnpDcm9uRXhwcmVzc2lvbkxhYmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgdHlwZTogVGltZVR5cGUgPSAnc2Vjb25kJztcbiAgQElucHV0KCkgdmFsaWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKSBsb2NhbGUhOiBOekNyb25FeHByZXNzaW9uTGFiZWxJMThuO1xuICBASW5wdXQoKSBsYWJlbEZvY3VzOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgbGFiZWxFcnJvcjogVGltZVR5cGVFcnJvciA9ICdzZWNvbmRFcnJvcic7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMubGFiZWxFcnJvciA9IGAke3RoaXMudHlwZX1FcnJvcmA7XG4gIH1cbn1cbiJdfQ==