/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NzAggregatePipe } from './nz-aggregate.pipe';
import { NzBytesPipe } from './nz-bytes.pipe';
import { NzToCssUnitPipe } from './nz-css-unit.pipe';
import { NzEllipsisPipe } from './nz-ellipsis.pipe';
import { NzSafeNullPipe } from './nz-safe-null.pipe';
import { NzSanitizerPipe } from './nz-sanitizer.pipe';
import { NzTrimPipe } from './nz-trim.pipe';
import * as i0 from "@angular/core";
const pipes = [
    NzToCssUnitPipe,
    NzSafeNullPipe,
    NzSanitizerPipe,
    NzTrimPipe,
    NzBytesPipe,
    NzAggregatePipe,
    NzEllipsisPipe
];
export class NzPipesModule {
}
NzPipesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: NzPipesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NzPipesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.5", ngImport: i0, type: NzPipesModule, declarations: [NzToCssUnitPipe,
        NzSafeNullPipe,
        NzSanitizerPipe,
        NzTrimPipe,
        NzBytesPipe,
        NzAggregatePipe,
        NzEllipsisPipe], imports: [CommonModule], exports: [NzToCssUnitPipe,
        NzSafeNullPipe,
        NzSanitizerPipe,
        NzTrimPipe,
        NzBytesPipe,
        NzAggregatePipe,
        NzEllipsisPipe] });
NzPipesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: NzPipesModule, imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.5", ngImport: i0, type: NzPipesModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    exports: [pipes],
                    declarations: [pipes]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotcGlwZXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY29tcG9uZW50cy9waXBlcy9uei1waXBlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUU1QyxNQUFNLEtBQUssR0FBRztJQUNaLGVBQWU7SUFDZixjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7SUFDVixXQUFXO0lBQ1gsZUFBZTtJQUNmLGNBQWM7Q0FDZixDQUFDO0FBT0YsTUFBTSxPQUFPLGFBQWE7OzBHQUFiLGFBQWE7MkdBQWIsYUFBYSxpQkFkeEIsZUFBZTtRQUNmLGNBQWM7UUFDZCxlQUFlO1FBQ2YsVUFBVTtRQUNWLFdBQVc7UUFDWCxlQUFlO1FBQ2YsY0FBYyxhQUlKLFlBQVksYUFWdEIsZUFBZTtRQUNmLGNBQWM7UUFDZCxlQUFlO1FBQ2YsVUFBVTtRQUNWLFdBQVc7UUFDWCxlQUFlO1FBQ2YsY0FBYzsyR0FRSCxhQUFhLFlBSmQsWUFBWTsyRkFJWCxhQUFhO2tCQUx6QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDO29CQUNoQixZQUFZLEVBQUUsQ0FBQyxLQUFLLENBQUM7aUJBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE56QWdncmVnYXRlUGlwZSB9IGZyb20gJy4vbnotYWdncmVnYXRlLnBpcGUnO1xuaW1wb3J0IHsgTnpCeXRlc1BpcGUgfSBmcm9tICcuL256LWJ5dGVzLnBpcGUnO1xuaW1wb3J0IHsgTnpUb0Nzc1VuaXRQaXBlIH0gZnJvbSAnLi9uei1jc3MtdW5pdC5waXBlJztcbmltcG9ydCB7IE56RWxsaXBzaXNQaXBlIH0gZnJvbSAnLi9uei1lbGxpcHNpcy5waXBlJztcbmltcG9ydCB7IE56U2FmZU51bGxQaXBlIH0gZnJvbSAnLi9uei1zYWZlLW51bGwucGlwZSc7XG5pbXBvcnQgeyBOelNhbml0aXplclBpcGUgfSBmcm9tICcuL256LXNhbml0aXplci5waXBlJztcbmltcG9ydCB7IE56VHJpbVBpcGUgfSBmcm9tICcuL256LXRyaW0ucGlwZSc7XG5cbmNvbnN0IHBpcGVzID0gW1xuICBOelRvQ3NzVW5pdFBpcGUsXG4gIE56U2FmZU51bGxQaXBlLFxuICBOelNhbml0aXplclBpcGUsXG4gIE56VHJpbVBpcGUsXG4gIE56Qnl0ZXNQaXBlLFxuICBOekFnZ3JlZ2F0ZVBpcGUsXG4gIE56RWxsaXBzaXNQaXBlXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZXhwb3J0czogW3BpcGVzXSxcbiAgZGVjbGFyYXRpb25zOiBbcGlwZXNdXG59KVxuZXhwb3J0IGNsYXNzIE56UGlwZXNNb2R1bGUge31cbiJdfQ==