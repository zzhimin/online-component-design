{"version":3,"file":"ng-zorro-antd-form.mjs","sources":["../../components/form/form-item.component.ts","../../components/form/form.directive.ts","../../components/form/form-control.component.ts","../../components/form/form-label.component.ts","../../components/form/form-split.component.ts","../../components/form/form-text.component.ts","../../components/form/form.module.ts","../../components/form/public-api.ts","../../components/form/ng-zorro-antd-form.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | '';\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'ant-form-item',\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  status: NzFormControlStatusType = '';\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { Directive, Input, OnChanges, OnDestroy, Optional, SimpleChange, SimpleChanges } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ThemeType } from '@ant-design/icons-angular';\n\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, InputObservable } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'form';\n\nexport type NzFormLayoutType = 'horizontal' | 'vertical' | 'inline';\n\nexport type NzLabelAlignType = 'left' | 'right';\n\nexport const DefaultTooltipIcon = {\n  type: 'question-circle',\n  theme: 'outline'\n} as const;\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    class: 'ant-form',\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`,\n    '[class.ant-form-rtl]': `dir === 'rtl'`\n  }\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  @Input() nzLayout: NzFormLayoutType = 'horizontal';\n  @Input() @WithConfig() @InputBoolean() nzNoColon: boolean = false;\n  @Input() @WithConfig() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() @InputBoolean() nzDisableAutoTips = false;\n  @Input() @WithConfig() nzTooltipIcon: string | { type: string; theme: ThemeType } = DefaultTooltipIcon;\n  @Input() nzLabelAlign: NzLabelAlignType = 'right';\n\n  dir: Direction = 'ltr';\n  destroy$ = new Subject();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(public nzConfigService: NzConfigService, @Optional() private directionality: Directionality) {\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.inputChanges$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\n\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { NzFormStatusService } from 'ng-zorro-antd/core/form';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\nimport { NzFormDirective } from './form.directive';\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div @helpMotion class=\"ant-form-item-explain ant-form-item-explain-connected\" *ngIf=\"innerTip\">\n      <div role=\"alert\" [ngClass]=\"['ant-form-item-explain-' + status]\">\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{\n          innerTip\n        }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `,\n  providers: [NzFormStatusService],\n  host: {\n    class: 'ant-form-item-control'\n  }\n})\nexport class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  static ngAcceptInputType_nzHasFeedback: BooleanInput;\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private destroyed$ = new Subject<void>();\n  private localeId!: string;\n  private autoErrorTip?: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== 'default'\n      ? toBoolean(this.nzDisableAutoTips)\n      : this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  status: NzFormControlStatusType = '';\n  validateControl: AbstractControl | NgModel | null = null;\n  innerTip: string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl?: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzWarningTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzErrorTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzValidatingTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() nzDisableAutoTips: boolean | 'default' = 'default';\n\n  @Input()\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = toBoolean(value);\n    this.nzFormStatusService.formStatusChanges.next({ status: this.status, hasFeedback: this._hasFeedback });\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = (this.validateControl.statusChanges as Observable<NzSafeAny>)\n        .pipe(startWith(null), takeUntil(this.destroyed$))\n        .subscribe(() => {\n          if (!this.disableAutoTips) {\n            this.updateAutoErrorTip();\n          }\n          this.setStatus();\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.innerTip = this.getInnerTip(this.status);\n    this.nzFormStatusService.formStatusChanges.next({ status: this.status, hasFeedback: this.nzHasFeedback });\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (\n      validateString === 'validating' ||\n      validateString === 'pending' ||\n      this.validateControlStatus('PENDING')\n    ) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = '';\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (\n        (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus)\n      );\n    }\n  }\n\n  private getInnerTip(\n    status: NzFormControlStatusType\n  ): string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n      case 'validating':\n        return this.nzValidatingTip || null;\n      case 'success':\n        return this.nzSuccessTip || null;\n      case 'warning':\n        return this.nzWarningTip || null;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key]?.[this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzAutoTips.default?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips.default?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  constructor(\n    @Optional() @Host() private nzFormItemComponent: NzFormItemComponent,\n    private cdr: ChangeDetectorRef,\n    i18n: NzI18nService,\n    @Optional() private nzFormDirective: NzFormDirective,\n    private nzFormStatusService: NzFormStatusService\n  ) {\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective\n        ?.getInputObservable('nzDisableAutoTips')\n        .pipe(filter(() => this.nzDisableAutoTips === 'default'))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl!;\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { ThemeType } from '@ant-design/icons-angular';\n\nimport { BooleanInput, NzTSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\n\nimport { DefaultTooltipIcon, NzFormDirective, NzLabelAlignType } from './form.directive';\n\nexport interface NzFormTooltipIcon {\n  type: NzTSType;\n  theme: ThemeType;\n}\n\nfunction toTooltipIcon(value: string | NzFormTooltipIcon): Required<NzFormTooltipIcon> {\n  const icon = typeof value === 'string' ? { type: value } : value;\n  return { ...DefaultTooltipIcon, ...icon };\n}\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n      <span *ngIf=\"nzTooltipTitle\" class=\"ant-form-item-tooltip\" nz-tooltip [nzTooltipTitle]=\"nzTooltipTitle\">\n        <ng-container *nzStringTemplateOutlet=\"tooltipIcon.type; let tooltipIconType\">\n          <span nz-icon [nzType]=\"tooltipIconType\" [nzTheme]=\"tooltipIcon.theme\"></span>\n        </ng-container>\n      </span>\n    </label>\n  `,\n  host: {\n    class: 'ant-form-item-label',\n    '[class.ant-form-item-label-left]': `nzLabelAlign === 'left'`\n  }\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n\n  @Input() nzFor?: string;\n  @Input() @InputBoolean() nzRequired = false;\n  @Input()\n  set nzNoColon(value: boolean) {\n    this.noColon = toBoolean(value);\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : this.nzFormDirective?.nzNoColon;\n  }\n\n  private noColon: boolean | 'default' = 'default';\n\n  @Input() nzTooltipTitle?: NzTSType;\n  @Input()\n  set nzTooltipIcon(value: string | NzFormTooltipIcon) {\n    this._tooltipIcon = toTooltipIcon(value);\n  }\n  // due to 'get' and 'set' accessor must have the same type, so it was renamed to `tooltipIcon`\n  get tooltipIcon(): NzFormTooltipIcon {\n    return this._tooltipIcon !== 'default'\n      ? this._tooltipIcon\n      : toTooltipIcon(this.nzFormDirective?.nzTooltipIcon || DefaultTooltipIcon);\n  }\n  private _tooltipIcon: NzFormTooltipIcon | 'default' = 'default';\n\n  @Input()\n  set nzLabelAlign(value: NzLabelAlignType) {\n    this.labelAlign = value;\n  }\n\n  get nzLabelAlign(): NzLabelAlignType {\n    return this.labelAlign !== 'default' ? this.labelAlign : this.nzFormDirective?.nzLabelAlign || 'right';\n  }\n\n  private labelAlign: NzLabelAlignType | 'default' = 'default';\n\n  private destroy$ = new Subject();\n\n  constructor(private cdr: ChangeDetectorRef, @Optional() @SkipSelf() private nzFormDirective: NzFormDirective) {\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzTooltipIcon')\n        .pipe(\n          filter(() => this._tooltipIcon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n\n      this.nzFormDirective\n        .getInputObservable('nzLabelAlign')\n        .pipe(\n          filter(() => this.labelAlign === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-form-split'\n  }\n})\nexport class NzFormSplitComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-form-text'\n  }\n})\nexport class NzFormTextComponent {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  declarations: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  imports: [\n    BidiModule,\n    CommonModule,\n    NzGridModule,\n    NzIconModule,\n    NzToolTipModule,\n    LayoutModule,\n    PlatformModule,\n    NzOutletModule\n  ]\n})\nexport class NzFormModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './form.module';\nexport * from './form.directive';\nexport * from './form-item.component';\nexport * from './form-label.component';\nexport * from './form-control.component';\nexport * from './form-text.component';\nexport * from './form-split.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NzFormItemComponent","i2","i3.NzFormDirective","i1.NzFormDirective","i4","i5"],"mappings":"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"}