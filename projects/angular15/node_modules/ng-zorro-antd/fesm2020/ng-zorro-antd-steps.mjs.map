{"version":3,"file":"ng-zorro-antd-steps.mjs","sources":["../../components/steps/step.component.ts","../../components/steps/steps.component.ts","../../components/steps/steps.module.ts","../../components/steps/public-api.ts","../../components/steps/ng-zorro-antd-steps.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NgClassType, NzSizeDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzProgressFormatter } from 'ng-zorro-antd/progress';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-step',\n  exportAs: 'nzStep',\n  preserveWhitespaces: false,\n  template: `\n    <div\n      #itemContainer\n      class=\"ant-steps-item-container\"\n      [attr.role]=\"clickable && !nzDisabled ? 'button' : null\"\n      [tabindex]=\"clickable && !nzDisabled ? 0 : null\"\n    >\n      <div class=\"ant-steps-item-tail\" *ngIf=\"last !== true\"></div>\n      <div class=\"ant-steps-item-icon\">\n        <ng-template [ngIf]=\"!showProcessDot\">\n          <div *ngIf=\"showProgress\" class=\"ant-steps-progress-icon\">\n            <nz-progress\n              [nzPercent]=\"nzPercentage\"\n              nzType=\"circle\"\n              [nzWidth]=\"nzSize === 'small' ? 32 : 40\"\n              [nzFormat]=\"nullProcessFormat\"\n              [nzStrokeWidth]=\"4\"\n            ></nz-progress>\n          </div>\n          <span class=\"ant-steps-icon\" *ngIf=\"nzStatus === 'finish' && !nzIcon\"\n            ><span nz-icon nzType=\"check\"></span\n          ></span>\n          <span class=\"ant-steps-icon\" *ngIf=\"nzStatus === 'error'\"><span nz-icon nzType=\"close\"></span></span>\n          <span class=\"ant-steps-icon\" *ngIf=\"(nzStatus === 'process' || nzStatus === 'wait') && !nzIcon\">\n            {{ index + 1 }}\n          </span>\n          <span class=\"ant-steps-icon\" *ngIf=\"nzIcon\">\n            <ng-container *nzStringTemplateOutlet=\"nzIcon; let icon\">\n              <span nz-icon [nzType]=\"!oldAPIIcon && icon\" [ngClass]=\"oldAPIIcon && icon\"></span>\n            </ng-container>\n          </span>\n        </ng-template>\n        <ng-template [ngIf]=\"showProcessDot\">\n          <span class=\"ant-steps-icon\">\n            <ng-template #processDotTemplate>\n              <span class=\"ant-steps-icon-dot\"></span>\n            </ng-template>\n            <ng-template\n              [ngTemplateOutlet]=\"customProcessTemplate || processDotTemplate\"\n              [ngTemplateOutletContext]=\"{\n                $implicit: processDotTemplate,\n                status: nzStatus,\n                index: index\n              }\"\n            ></ng-template>\n          </span>\n        </ng-template>\n      </div>\n      <div class=\"ant-steps-item-content\">\n        <div class=\"ant-steps-item-title\">\n          <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n          <div *ngIf=\"nzSubtitle\" class=\"ant-steps-item-subtitle\">\n            <ng-container *nzStringTemplateOutlet=\"nzSubtitle\">{{ nzSubtitle }}</ng-container>\n          </div>\n        </div>\n        <div class=\"ant-steps-item-description\">\n          <ng-container *nzStringTemplateOutlet=\"nzDescription\">{{ nzDescription }}</ng-container>\n        </div>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'ant-steps-item',\n    '[class.ant-steps-item-wait]': 'nzStatus === \"wait\"',\n    '[class.ant-steps-item-process]': 'nzStatus === \"process\"',\n    '[class.ant-steps-item-finish]': 'nzStatus === \"finish\"',\n    '[class.ant-steps-item-error]': 'nzStatus === \"error\"',\n    '[class.ant-steps-item-active]': 'currentIndex === index',\n    '[class.ant-steps-item-disabled]': 'nzDisabled',\n    '[class.ant-steps-item-custom]': '!!nzIcon',\n    '[class.ant-steps-next-error]': '(outStatus === \"error\") && (currentIndex === index + 1)'\n  },\n  providers: [NzDestroyService]\n})\nexport class NzStepComponent implements OnInit {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @ViewChild('processDotTemplate', { static: false }) processDotTemplate?: TemplateRef<void>;\n  @ViewChild('itemContainer', { static: true }) itemContainer!: ElementRef<HTMLElement>;\n\n  @Input() nzTitle?: string | TemplateRef<void>;\n  @Input() nzSubtitle?: string | TemplateRef<void>;\n  @Input() nzDescription?: string | TemplateRef<void>;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzPercentage: number | null = null;\n  @Input() nzSize: NzSizeDSType = 'default';\n\n  @Input()\n  get nzStatus(): string {\n    return this._status;\n  }\n\n  set nzStatus(status: string) {\n    this._status = status;\n    this.isCustomStatus = true;\n  }\n\n  isCustomStatus = false;\n  private _status = 'wait';\n\n  @Input()\n  get nzIcon(): NgClassType | TemplateRef<void> | undefined {\n    return this._icon;\n  }\n\n  set nzIcon(value: NgClassType | TemplateRef<void> | undefined) {\n    if (!(value instanceof TemplateRef)) {\n      this.oldAPIIcon = typeof value === 'string' && value.indexOf('anticon') > -1;\n    } else {\n    }\n    this._icon = value;\n  }\n\n  oldAPIIcon = true;\n  private _icon?: NgClassType | TemplateRef<void>;\n\n  customProcessTemplate?: TemplateRef<{ $implicit: TemplateRef<void>; status: string; index: number }>; // Set by parent.\n  direction = 'horizontal';\n  index = 0;\n  last = false;\n  outStatus = 'process';\n  showProcessDot = false;\n  clickable = false;\n\n  clickOutsideAngular$ = new Subject<number>();\n\n  readonly nullProcessFormat: NzProgressFormatter = () => null;\n\n  get showProgress(): boolean {\n    return (\n      this.nzPercentage !== null &&\n      !this.nzIcon &&\n      this.nzStatus === 'process' &&\n      this.nzPercentage >= 0 &&\n      this.nzPercentage <= 100\n    );\n  }\n\n  get currentIndex(): number {\n    return this._currentIndex;\n  }\n\n  set currentIndex(current: number) {\n    this._currentIndex = current;\n    if (!this.isCustomStatus) {\n      this._status = current > this.index ? 'finish' : current === this.index ? this.outStatus || '' : 'wait';\n    }\n  }\n\n  private _currentIndex = 0;\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private destroy$: NzDestroyService) {}\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() =>\n      fromEvent(this.itemContainer.nativeElement, 'click')\n        .pipe(\n          filter(() => this.clickable && this.currentIndex !== this.index && !this.nzDisabled),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.clickOutsideAngular$.next(this.index);\n        })\n    );\n  }\n\n  enable(): void {\n    this.nzDisabled = false;\n    this.cdr.markForCheck();\n  }\n\n  disable(): void {\n    this.nzDisabled = true;\n    this.cdr.markForCheck();\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { BooleanInput, NzSizeDSType } from 'ng-zorro-antd/core/types';\nimport { toBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzStepComponent } from './step.component';\n\nexport type NzDirectionType = 'horizontal' | 'vertical';\nexport type NzStatusType = 'wait' | 'process' | 'finish' | 'error';\nexport type nzProgressDotTemplate = TemplateRef<{ $implicit: TemplateRef<void>; status: string; index: number }>;\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-steps',\n  exportAs: 'nzSteps',\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'ant-steps',\n    '[class.ant-steps-horizontal]': `nzDirection === 'horizontal'`,\n    '[class.ant-steps-vertical]': `nzDirection === 'vertical'`,\n    '[class.ant-steps-label-horizontal]': `nzDirection === 'horizontal'`,\n    '[class.ant-steps-label-vertical]': `(showProcessDot || nzLabelPlacement === 'vertical') && nzDirection === 'horizontal'`,\n    '[class.ant-steps-dot]': 'showProcessDot',\n    '[class.ant-steps-small]': `nzSize === 'small'`,\n    '[class.ant-steps-navigation]': `nzType === 'navigation'`,\n    '[class.ant-steps-rtl]': `dir === 'rtl'`,\n    '[class.ant-steps-with-progress]': 'showProgress'\n  },\n  providers: [NzDestroyService]\n})\nexport class NzStepsComponent implements OnChanges, OnInit, AfterContentInit {\n  static ngAcceptInputType_nzProgressDot: BooleanInput | nzProgressDotTemplate | undefined | null;\n\n  @ContentChildren(NzStepComponent) steps!: QueryList<NzStepComponent>;\n\n  @Input() nzCurrent = 0;\n  @Input() nzDirection: NzDirectionType = 'horizontal';\n  @Input() nzLabelPlacement: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() nzType: 'default' | 'navigation' = 'default';\n  @Input() nzSize: NzSizeDSType = 'default';\n  @Input() nzStartIndex = 0;\n  @Input() nzStatus: NzStatusType = 'process';\n\n  @Input()\n  set nzProgressDot(value: boolean | nzProgressDotTemplate) {\n    if (value instanceof TemplateRef) {\n      this.showProcessDot = true;\n      this.customProcessDotTemplate = value;\n    } else {\n      this.showProcessDot = toBoolean(value);\n    }\n    this.updateChildrenSteps();\n  }\n\n  @Output() readonly nzIndexChange = new EventEmitter<number>();\n\n  private indexChangeSubscription = Subscription.EMPTY;\n\n  showProcessDot = false;\n  showProgress = false;\n  customProcessDotTemplate?: TemplateRef<{ $implicit: TemplateRef<void>; status: string; index: number }>;\n  dir: Direction = 'ltr';\n\n  constructor(\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    private destroy$: NzDestroyService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzStartIndex || changes.nzDirection || changes.nzStatus || changes.nzCurrent || changes.nzSize) {\n      this.updateChildrenSteps();\n    }\n  }\n\n  ngOnInit(): void {\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n    this.updateChildrenSteps();\n  }\n\n  ngAfterContentInit(): void {\n    if (this.steps) {\n      this.steps.changes.pipe(startWith(null), takeUntil(this.destroy$)).subscribe(() => {\n        this.updateHostProgressClass();\n        this.updateChildrenSteps();\n      });\n    }\n  }\n\n  private updateHostProgressClass(): void {\n    if (this.steps && !this.showProcessDot) {\n      this.showProgress = !!this.steps.toArray().find(step => step.nzPercentage !== null);\n    }\n  }\n\n  private updateChildrenSteps(): void {\n    if (this.steps) {\n      const length = this.steps.length;\n      this.steps.toArray().forEach((step, index) => {\n        Promise.resolve().then(() => {\n          step.nzSize = this.nzSize;\n          step.outStatus = this.nzStatus;\n          step.showProcessDot = this.showProcessDot;\n          if (this.customProcessDotTemplate) {\n            step.customProcessTemplate = this.customProcessDotTemplate;\n          }\n          step.clickable = this.nzIndexChange.observers.length > 0;\n          step.direction = this.nzDirection;\n          step.index = index + this.nzStartIndex;\n          step.currentIndex = this.nzCurrent;\n          step.last = length === index + 1;\n          step.markForCheck();\n        });\n      });\n      this.indexChangeSubscription.unsubscribe();\n      this.indexChangeSubscription = merge(...this.steps.map(step => step.clickOutsideAngular$))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(index => {\n          if (this.nzIndexChange.observers.length) {\n            this.ngZone.run(() => this.nzIndexChange.emit(index));\n          }\n        });\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\n\nimport { NzStepComponent } from './step.component';\nimport { NzStepsComponent } from './steps.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzIconModule, NzOutletModule, NzProgressModule],\n  exports: [NzStepsComponent, NzStepComponent],\n  declarations: [NzStepsComponent, NzStepComponent]\n})\nexport class NzStepsModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './steps.component';\nexport * from './step.component';\nexport * from './steps.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2"],"mappings":"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"}