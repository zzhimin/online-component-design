import { ElementRef, EventEmitter, NgZone, OnInit, Renderer2 } from '@angular/core';
import { NzDestroyService } from 'ng-zorro-antd/core/services';
import { NzResizableService } from './resizable.service';
import * as i0 from "@angular/core";
export declare type NzResizeDirection = 'top' | 'right' | 'bottom' | 'left' | 'topRight' | 'bottomRight' | 'bottomLeft' | 'topLeft';
export declare class NzResizeHandleMouseDownEvent {
    direction: NzResizeDirection;
    mouseEvent: MouseEvent | TouchEvent;
    constructor(direction: NzResizeDirection, mouseEvent: MouseEvent | TouchEvent);
}
export declare class NzResizeHandleComponent implements OnInit {
    private ngZone;
    private nzResizableService;
    private renderer;
    private host;
    private destroy$;
    nzDirection: NzResizeDirection;
    readonly nzMouseDown: EventEmitter<NzResizeHandleMouseDownEvent>;
    constructor(ngZone: NgZone, nzResizableService: NzResizableService, renderer: Renderer2, host: ElementRef<HTMLElement>, destroy$: NzDestroyService);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NzResizeHandleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NzResizeHandleComponent, "nz-resize-handle, [nz-resize-handle]", ["nzResizeHandle"], { "nzDirection": "nzDirection"; }, { "nzMouseDown": "nzMouseDown"; }, never, ["*"], false, never>;
}
